/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/@coreui/coreui@3.0.0/js/src/toast.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getjQuery,TRANSITION_END,emulateTransitionEnd,getTransitionDurationFromElement,reflow,typeCheckConfig}from"./util/index";import Data from"./dom/data";import EventHandler from"./dom/event-handler";import Manipulator from"./dom/manipulator";const NAME="toast",VERSION="3.0.0",DATA_KEY="coreui.toast",EVENT_KEY=`.${DATA_KEY}`,Event={CLICK_DISMISS:`click.dismiss${EVENT_KEY}`,HIDE:`hide${EVENT_KEY}`,HIDDEN:`hidden${EVENT_KEY}`,SHOW:`show${EVENT_KEY}`,SHOWN:`shown${EVENT_KEY}`},ClassName={FADE:"fade",HIDE:"hide",SHOW:"show",SHOWING:"showing"},DefaultType={animation:"boolean",autohide:"boolean",delay:"number"},Default={animation:!0,autohide:!0,delay:500},Selector={DATA_DISMISS:'[data-dismiss="toast"]'};class Toast{constructor(e,t){this._element=e,this._config=this._getConfig(t),this._timeout=null,this._setListeners(),Data.setData(e,DATA_KEY,this)}static get VERSION(){return VERSION}static get DefaultType(){return DefaultType}static get Default(){return Default}show(){if(EventHandler.trigger(this._element,Event.SHOW).defaultPrevented)return;this._config.animation&&this._element.classList.add(ClassName.FADE);const e=()=>{this._element.classList.remove(ClassName.SHOWING),this._element.classList.add(ClassName.SHOW),EventHandler.trigger(this._element,Event.SHOWN),this._config.autohide&&(this._timeout=setTimeout(()=>{this.hide()},this._config.delay))};if(this._element.classList.remove(ClassName.HIDE),reflow(this._element),this._element.classList.add(ClassName.SHOWING),this._config.animation){const t=getTransitionDurationFromElement(this._element);EventHandler.one(this._element,TRANSITION_END,e),emulateTransitionEnd(this._element,t)}else e()}hide(){if(!this._element.classList.contains(ClassName.SHOW))return;if(EventHandler.trigger(this._element,Event.HIDE).defaultPrevented)return;const e=()=>{this._element.classList.add(ClassName.HIDE),EventHandler.trigger(this._element,Event.HIDDEN)};if(this._element.classList.remove(ClassName.SHOW),this._config.animation){const t=getTransitionDurationFromElement(this._element);EventHandler.one(this._element,TRANSITION_END,e),emulateTransitionEnd(this._element,t)}else e()}dispose(){clearTimeout(this._timeout),this._timeout=null,this._element.classList.contains(ClassName.SHOW)&&this._element.classList.remove(ClassName.SHOW),EventHandler.off(this._element,Event.CLICK_DISMISS),Data.removeData(this._element,DATA_KEY),this._element=null,this._config=null}_getConfig(e){return e={...Default,...Manipulator.getDataAttributes(this._element),..."object"==typeof e&&e?e:{}},typeCheckConfig(NAME,e,this.constructor.DefaultType),e}_setListeners(){EventHandler.on(this._element,Event.CLICK_DISMISS,Selector.DATA_DISMISS,()=>this.hide())}static jQueryInterface(e){return this.each(function(){let t=Data.getData(this,DATA_KEY);if(t||(t=new Toast(this,"object"==typeof e&&e)),"string"==typeof e){if(void 0===t[e])throw new TypeError(`No method named "${e}"`);t[e](this)}})}static getInstance(e){return Data.getData(e,DATA_KEY)}}const $=getjQuery();if($){const e=$.fn[NAME];$.fn[NAME]=Toast.jQueryInterface,$.fn[NAME].Constructor=Toast,$.fn[NAME].noConflict=(()=>($.fn[NAME]=e,Toast.jQueryInterface))}export default Toast;
//# sourceMappingURL=/sm/b8748c2aad1e98986fc770cb8dee500fe71d9e017fbb64f7cad668b219384d99.map