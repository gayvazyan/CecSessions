/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/@coreui/coreui@3.0.0/js/src/collapse.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getjQuery,TRANSITION_END,emulateTransitionEnd,getSelectorFromElement,getElementFromSelector,getTransitionDurationFromElement,isElement,makeArray,reflow,typeCheckConfig}from"./util/index";import Data from"./dom/data";import EventHandler from"./dom/event-handler";import Manipulator from"./dom/manipulator";import SelectorEngine from"./dom/selector-engine";const NAME="collapse",VERSION="3.0.0",DATA_KEY="coreui.collapse",EVENT_KEY=`.${DATA_KEY}`,DATA_API_KEY=".data-api",Default={toggle:!0,parent:""},DefaultType={toggle:"boolean",parent:"(string|element)"},Event={SHOW:`show${EVENT_KEY}`,SHOWN:`shown${EVENT_KEY}`,HIDE:`hide${EVENT_KEY}`,HIDDEN:`hidden${EVENT_KEY}`,CLICK_DATA_API:`click${EVENT_KEY}.data-api`},ClassName={SHOW:"show",COLLAPSE:"collapse",COLLAPSING:"collapsing",COLLAPSED:"collapsed"},Dimension={WIDTH:"width",HEIGHT:"height"},Selector={ACTIVES:".show, .collapsing",DATA_TOGGLE:'[data-toggle="collapse"]'};class Collapse{constructor(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=makeArray(SelectorEngine.find(`[data-toggle="collapse"][href="#${e.id}"],`+`[data-toggle="collapse"][data-target="#${e.id}"]`));const s=makeArray(SelectorEngine.find(Selector.DATA_TOGGLE));for(let t=0,n=s.length;t<n;t++){const n=s[t],a=getSelectorFromElement(n),i=makeArray(SelectorEngine.find(a)).filter(t=>t===e);null!==a&&i.length&&(this._selector=a,this._triggerArray.push(n))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle(),Data.setData(e,DATA_KEY,this)}static get VERSION(){return VERSION}static get Default(){return Default}toggle(){this._element.classList.contains(ClassName.SHOW)?this.hide():this.show()}show(){if(this._isTransitioning||this._element.classList.contains(ClassName.SHOW))return;let e,t;this._parent&&0===(e=makeArray(SelectorEngine.find(Selector.ACTIVES,this._parent)).filter(e=>"string"==typeof this._config.parent?e.getAttribute("data-parent")===this._config.parent:e.classList.contains(ClassName.COLLAPSE))).length&&(e=null);const s=SelectorEngine.findOne(this._selector);if(e){const n=e.filter(e=>s!==e);if((t=n[0]?Data.getData(n[0],DATA_KEY):null)&&t._isTransitioning)return}if(EventHandler.trigger(this._element,Event.SHOW).defaultPrevented)return;e&&e.forEach(e=>{s!==e&&Collapse.collapseInterface(e,"hide"),t||Data.setData(e,DATA_KEY,null)});const n=this._getDimension();this._element.classList.remove(ClassName.COLLAPSE),this._element.classList.add(ClassName.COLLAPSING),this._element.style[n]=0,this._triggerArray.length&&this._triggerArray.forEach(e=>{e.classList.remove(ClassName.COLLAPSED),e.setAttribute("aria-expanded",!0)}),this.setTransitioning(!0);const a=`scroll${n[0].toUpperCase()+n.slice(1)}`,i=getTransitionDurationFromElement(this._element);EventHandler.one(this._element,TRANSITION_END,()=>{this._element.classList.remove(ClassName.COLLAPSING),this._element.classList.add(ClassName.COLLAPSE),this._element.classList.add(ClassName.SHOW),this._element.style[n]="",this.setTransitioning(!1),EventHandler.trigger(this._element,Event.SHOWN)}),emulateTransitionEnd(this._element,i),this._element.style[n]=`${this._element[a]}px`}hide(){if(this._isTransitioning||!this._element.classList.contains(ClassName.SHOW))return;if(EventHandler.trigger(this._element,Event.HIDE).defaultPrevented)return;const e=this._getDimension();this._element.style[e]=`${this._element.getBoundingClientRect()[e]}px`,reflow(this._element),this._element.classList.add(ClassName.COLLAPSING),this._element.classList.remove(ClassName.COLLAPSE),this._element.classList.remove(ClassName.SHOW);const t=this._triggerArray.length;if(t>0)for(let e=0;e<t;e++){const t=this._triggerArray[e],s=getElementFromSelector(t);s&&!s.classList.contains(ClassName.SHOW)&&(t.classList.add(ClassName.COLLAPSED),t.setAttribute("aria-expanded",!1))}this.setTransitioning(!0);this._element.style[e]="";const s=getTransitionDurationFromElement(this._element);EventHandler.one(this._element,TRANSITION_END,()=>{this.setTransitioning(!1),this._element.classList.remove(ClassName.COLLAPSING),this._element.classList.add(ClassName.COLLAPSE),EventHandler.trigger(this._element,Event.HIDDEN)}),emulateTransitionEnd(this._element,s)}setTransitioning(e){this._isTransitioning=e}dispose(){Data.removeData(this._element,DATA_KEY),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null}_getConfig(e){return(e={...Default,...e}).toggle=Boolean(e.toggle),typeCheckConfig(NAME,e,DefaultType),e}_getDimension(){return this._element.classList.contains(Dimension.WIDTH)?Dimension.WIDTH:Dimension.HEIGHT}_getParent(){let{parent:e}=this._config;isElement(e)?void 0===e.jquery&&void 0===e[0]||(e=e[0]):e=SelectorEngine.findOne(e);const t=`[data-toggle="collapse"][data-parent="${e}"]`;return makeArray(SelectorEngine.find(t,e)).forEach(e=>{const t=getElementFromSelector(e);this._addAriaAndCollapsedClass(t,[e])}),e}_addAriaAndCollapsedClass(e,t){if(e){const s=e.classList.contains(ClassName.SHOW);t.length&&t.forEach(e=>{s?e.classList.remove(ClassName.COLLAPSED):e.classList.add(ClassName.COLLAPSED),e.setAttribute("aria-expanded",s)})}}static collapseInterface(e,t){let s=Data.getData(e,DATA_KEY);const n={...Default,...Manipulator.getDataAttributes(e),..."object"==typeof t&&t?t:{}};if(!s&&n.toggle&&/show|hide/.test(t)&&(n.toggle=!1),s||(s=new Collapse(e,n)),"string"==typeof t){if(void 0===s[t])throw new TypeError(`No method named "${t}"`);s[t]()}}static jQueryInterface(e){return this.each(function(){Collapse.collapseInterface(this,e)})}static getInstance(e){return Data.getData(e,DATA_KEY)}}EventHandler.on(document,Event.CLICK_DATA_API,Selector.DATA_TOGGLE,function(e){"A"===e.target.tagName&&e.preventDefault();const t=Manipulator.getDataAttributes(this),s=getSelectorFromElement(this);makeArray(SelectorEngine.find(s)).forEach(e=>{const s=Data.getData(e,DATA_KEY);let n;s?(null===s._parent&&"string"==typeof t.parent&&(s._config.parent=t.parent,s._parent=s._getParent()),n="toggle"):n=t,Collapse.collapseInterface(e,n)})});const $=getjQuery();if($){const e=$.fn[NAME];$.fn[NAME]=Collapse.jQueryInterface,$.fn[NAME].Constructor=Collapse,$.fn[NAME].noConflict=(()=>($.fn[NAME]=e,Collapse.jQueryInterface))}export default Collapse;
//# sourceMappingURL=/sm/ed05f7afd0fc8db6a7afcda55ab89ab9c0b075152d32a8c7c1e10c63cd646d87.map