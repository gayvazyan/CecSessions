/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/@coreui/coreui@3.0.0/js/src/button.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getjQuery}from"./util/index";import Data from"./dom/data";import EventHandler from"./dom/event-handler";import SelectorEngine from"./dom/selector-engine";const NAME="button",VERSION="3.0.0",DATA_KEY="coreui.button",EVENT_KEY=`.${DATA_KEY}`,DATA_API_KEY=".data-api",ClassName={ACTIVE:"active",BUTTON:"btn",FOCUS:"focus"},Selector={DATA_TOGGLE_CARROT:'[data-toggle^="button"]',DATA_TOGGLE:'[data-toggle="buttons"]',INPUT:'input:not([type="hidden"])',ACTIVE:".active",BUTTON:".btn"},Event={CLICK_DATA_API:`click${EVENT_KEY}.data-api`,FOCUS_DATA_API:`focus${EVENT_KEY}.data-api`,BLUR_DATA_API:`blur${EVENT_KEY}.data-api`};class Button{constructor(t){this._element=t,Data.setData(t,DATA_KEY,this)}static get VERSION(){return VERSION}toggle(){let t=!0,e=!0;const n=SelectorEngine.closest(this._element,Selector.DATA_TOGGLE);if(n){const s=SelectorEngine.findOne(Selector.INPUT,this._element);if(s&&"radio"===s.type){if(s.checked&&this._element.classList.contains(ClassName.ACTIVE))t=!1;else{const t=SelectorEngine.findOne(Selector.ACTIVE,n);t&&t.classList.remove(ClassName.ACTIVE)}if(t){if(s.hasAttribute("disabled")||n.hasAttribute("disabled")||s.classList.contains("disabled")||n.classList.contains("disabled"))return;s.checked=!this._element.classList.contains(ClassName.ACTIVE),EventHandler.trigger(s,"change")}s.focus(),e=!1}}e&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(ClassName.ACTIVE)),t&&this._element.classList.toggle(ClassName.ACTIVE)}dispose(){Data.removeData(this._element,DATA_KEY),this._element=null}static jQueryInterface(t){return this.each(function(){let e=Data.getData(this,DATA_KEY);e||(e=new Button(this)),"toggle"===t&&e[t]()})}static getInstance(t){return Data.getData(t,DATA_KEY)}}EventHandler.on(document,Event.CLICK_DATA_API,Selector.DATA_TOGGLE_CARROT,t=>{t.preventDefault();let e=t.target;e.classList.contains(ClassName.BUTTON)||(e=SelectorEngine.closest(e,Selector.BUTTON));let n=Data.getData(e,DATA_KEY);n||(n=new Button(e)),n.toggle()}),EventHandler.on(document,Event.FOCUS_DATA_API,Selector.DATA_TOGGLE_CARROT,t=>{const e=SelectorEngine.closest(t.target,Selector.BUTTON);e&&e.classList.add(ClassName.FOCUS)}),EventHandler.on(document,Event.BLUR_DATA_API,Selector.DATA_TOGGLE_CARROT,t=>{const e=SelectorEngine.closest(t.target,Selector.BUTTON);e&&e.classList.remove(ClassName.FOCUS)});const $=getjQuery();if($){const t=$.fn[NAME];$.fn[NAME]=Button.jQueryInterface,$.fn[NAME].Constructor=Button,$.fn[NAME].noConflict=(()=>($.fn[NAME]=t,Button.jQueryInterface))}export default Button;
//# sourceMappingURL=/sm/06f569e35b277950d288548e04d793073117ac0bdd0b856755d4588e0befd9dc.map